# Generated by Django 5.2.1 on 2025-05-31 08:08

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Office Name')),
                ('address', models.TextField(verbose_name='Address')),
                ('phone', models.CharField(max_length=20, verbose_name='Phone')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Office',
                'verbose_name_plural': 'Offices',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('make', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('year', models.PositiveIntegerField()),
                ('license_plate', models.CharField(max_length=20, unique=True)),
                ('vehicle_type', models.CharField(choices=[('car', 'Car'), ('van', 'Van'), ('bus', 'Bus'), ('truck', 'Truck')], max_length=10)),
                ('capacity', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('available', 'Available'), ('in_use', 'In Use'), ('maintenance', 'Maintenance')], default='available', max_length=20)),
                ('last_maintenance', models.DateField(blank=True, null=True)),
                ('next_maintenance', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('company_name', models.CharField(help_text='Official registered company name', max_length=100, unique=True, verbose_name='Company Name')),
                ('company_reg_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Registration Number')),
                ('tax_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tax ID')),
                ('contact_person', models.CharField(help_text='Primary contact for this client', max_length=100, verbose_name='Contact Person')),
                ('phone', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone')),
                ('alternate_phone', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Alternate Phone')),
                ('email', models.EmailField(help_text='Primary contact email', max_length=254, unique=True, verbose_name='Email')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('address_line1', models.CharField(max_length=255, verbose_name='Address Line 1')),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 2')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('state', models.CharField(max_length=100, verbose_name='State/Province')),
                ('postal_code', models.CharField(max_length=20, verbose_name='Postal Code')),
                ('country', models.CharField(default='United States', max_length=100, verbose_name='Country')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('pending', 'Pending'), ('suspended', 'Suspended')], default='active', max_length=10, verbose_name='Status')),
                ('is_verified', models.BooleanField(default=False, help_text='Designates whether the client has been verified', verbose_name='Verified')),
                ('notes', models.TextField(blank=True, help_text='Internal notes about this client', null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['company_name'], name='data_pro_cl_company_d80827_idx'), models.Index(fields=['email'], name='data_pro_cl_email_c11170_idx'), models.Index(fields=['status'], name='data_pro_cl_status_814f3c_idx')],
                'constraints': [models.UniqueConstraint(fields=('company_name', 'email'), name='unique_client_company_email')],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=50, verbose_name='Last Name')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', models.CharField(max_length=20, verbose_name='Phone')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('pending', 'Pending')], default='active', max_length=10, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='data_pro.client')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('issue_date', models.DateField()),
                ('due_date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('paid', 'Paid'), ('cancelled', 'Cancelled')], default='draft', max_length=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='data_pro.client')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='data_pro.customer')),
            ],
            options={
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='Passport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passport_number', models.CharField(max_length=50, unique=True)),
                ('issuing_country', models.CharField(max_length=100)),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('status', models.CharField(choices=[('valid', 'Valid'), ('expired', 'Expired'), ('lost', 'Lost/Stolen'), ('in_process', 'In Process')], default='valid', max_length=20)),
                ('scanned_copy', models.FileField(blank=True, null=True, upload_to='passports/')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_passports', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='passports', to='data_pro.customer')),
            ],
            options={
                'verbose_name': 'Passport',
                'verbose_name_plural': 'Passports',
                'ordering': ['-expiry_date'],
            },
        ),
        migrations.CreateModel(
            name='PassportExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.PositiveSmallIntegerField(choices=[(1, '1 Month'), (3, '3 Months'), (6, '6 Months'), (12, '1 Year'), (24, '2 Years')], default=6)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('apply_date', models.DateField()),
                ('released_date', models.DateField(blank=True, null=True)),
                ('picked_by', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('handed_by', models.ForeignKey(blank=True, limit_choices_to={'user_type__in': ['CLIENT_ADMIN', 'SUPERADMIN']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handed_extensions', to=settings.AUTH_USER_MODEL)),
                ('passport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extensions', to='data_pro.passport')),
            ],
            options={
                'verbose_name': 'Passport Extension',
                'verbose_name_plural': 'Passport Extensions',
                'ordering': ['-apply_date'],
            },
        ),
        migrations.CreateModel(
            name='Transport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pickup_location', models.CharField(max_length=255)),
                ('dropoff_location', models.CharField(max_length=255)),
                ('pickup_time', models.DateTimeField()),
                ('dropoff_time', models.DateTimeField()),
                ('distance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fare', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transports', to='data_pro.customer')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transports', to='data_pro.vehicle')),
            ],
            options={
                'ordering': ['-pickup_time'],
            },
        ),
        migrations.CreateModel(
            name='AdminAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('login', 'Login'), ('logout', 'Logout'), ('password_change', 'Password Change')], max_length=50, verbose_name='Action')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('additional_info', models.JSONField(blank=True, null=True, verbose_name='Additional Information')),
                ('admin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_actions', to=settings.AUTH_USER_MODEL, verbose_name='Administrator')),
                ('target_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_audit_logs', to=settings.AUTH_USER_MODEL, verbose_name='Target User')),
            ],
            options={
                'verbose_name': 'Admin Audit Log',
                'verbose_name_plural': 'Admin Audit Logs',
                'ordering': ['-timestamp'],
                'permissions': [('view_audit_log', 'Can view audit logs'), ('export_audit_log', 'Can export audit logs')],
                'get_latest_by': 'timestamp',
                'indexes': [models.Index(fields=['-timestamp'], name='data_pro_ad_timesta_915c5f_idx'), models.Index(fields=['action'], name='data_pro_ad_action_6e144e_idx'), models.Index(fields=['admin'], name='data_pro_ad_admin_i_927a01_idx'), models.Index(fields=['target_user'], name='data_pro_ad_target__0b5b28_idx')],
            },
        ),
        migrations.CreateModel(
            name='TransportService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_number', models.CharField(max_length=50, unique=True)),
                ('origin', models.CharField(max_length=255)),
                ('destination', models.CharField(max_length=255)),
                ('current_location', models.CharField(blank=True, max_length=255, null=True)),
                ('scheduled_departure', models.DateTimeField()),
                ('scheduled_arrival', models.DateTimeField()),
                ('actual_departure', models.DateTimeField(blank=True, null=True)),
                ('actual_arrival', models.DateTimeField(blank=True, null=True)),
                ('distance_km', models.DecimalField(decimal_places=2, max_digits=10)),
                ('estimated_duration_hours', models.DecimalField(decimal_places=2, max_digits=5)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_transit', 'In Transit'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('on_hold', 'On Hold')], default='scheduled', max_length=20)),
                ('tracking_code', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('base_fare', models.DecimalField(decimal_places=2, max_digits=10)),
                ('additional_charges', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('special_instructions', models.TextField(blank=True, null=True)),
                ('required_documents', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transports', to='data_pro.client')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_transports', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transport_services', to='data_pro.customer')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_transports', to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_transports', to='data_pro.vehicle')),
            ],
            options={
                'verbose_name': 'Transport Service',
                'verbose_name_plural': 'Transport Services',
                'ordering': ['-scheduled_departure'],
                'indexes': [models.Index(fields=['reference_number'], name='data_pro_tr_referen_c5a174_idx'), models.Index(fields=['status'], name='data_pro_tr_status_7aceef_idx'), models.Index(fields=['scheduled_departure'], name='data_pro_tr_schedul_fa3373_idx')],
            },
        ),
        migrations.CreateModel(
            name='Visa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visa_number', models.CharField(max_length=50, unique=True, verbose_name='Visa Number')),
                ('visa_type', models.CharField(choices=[('tourist', 'Tourist'), ('business', 'Business'), ('student', 'Student'), ('work', 'Work'), ('transit', 'Transit'), ('diplomatic', 'Diplomatic')], default='tourist', max_length=20, verbose_name='Visa Type')),
                ('issuing_country', models.CharField(max_length=100, verbose_name='Issuing Country')),
                ('issue_date', models.DateField(verbose_name='Issue Date')),
                ('expiry_date', models.DateField(verbose_name='Expiry Date')),
                ('duration_days', models.PositiveIntegerField(verbose_name='Duration (Days)')),
                ('entry_type', models.CharField(choices=[('single', 'Single Entry'), ('multiple', 'Multiple Entry')], default='single', max_length=20, verbose_name='Entry Type')),
                ('status', models.CharField(choices=[('processing', 'Processing'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('issued', 'Issued'), ('expired', 'Expired'), ('released', 'Released')], default='processing', max_length=20, verbose_name='Status')),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Unit Cost (USD)')),
                ('service_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Service Fee (USD)')),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Total Cost (USD)')),
                ('released_date', models.DateField(blank=True, null=True, verbose_name='Released Date')),
                ('picked_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='Picked By')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visas', to='data_pro.customer', verbose_name='Customer')),
                ('handed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handed_visas', to=settings.AUTH_USER_MODEL, verbose_name='Handed By')),
            ],
            options={
                'verbose_name': 'Visa',
                'verbose_name_plural': 'Visas',
                'ordering': ['-issue_date'],
                'indexes': [models.Index(fields=['visa_number'], name='data_pro_vi_visa_nu_8fff8a_idx'), models.Index(fields=['customer'], name='data_pro_vi_custome_dba12a_idx'), models.Index(fields=['status'], name='data_pro_vi_status_5621ba_idx'), models.Index(fields=['expiry_date'], name='data_pro_vi_expiry__4241c0_idx')],
            },
        ),
    ]
